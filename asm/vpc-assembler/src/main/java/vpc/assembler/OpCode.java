package vpc.assembler;

// this is a functional code without AssemblyVisitor reference

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.function.Supplier;

/**
 * @author rab405 largely using markford e93 sample code
 */
public enum OpCode {
    ALU(8),
    IADD(1),
    ISUB(2),
    IAND(3),
    IOR(4),
    INOR(5),
    IXOR(6),
    ISLT(7),
    SRJAL(10),
    JR(11),
    JEQ(12),
    JNEQ(13),
    SILU(16),
    SILOAD(17),
    SISTORE(18),
    SIBEQ(19),
    SIBNEQ(20),
    LW(21),
    SW(22),
    LR(23),
    WSR(24),
    LABEL(100);

    private final int value;

    OpCode(int value) {
        this.value = value;
    }

    @Generated("generated by IDE")
    public int getValue() {
        return value;
    }

    public static OpCode fromEncoded(int value) {
        for(OpCode oc : values()) {
           if (oc.getValue() == value) {
               return oc;
           }
        }
        throw new IllegalArgumentException("unknown opcode:" + value);
    }
}
